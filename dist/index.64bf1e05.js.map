{"mappings":"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","sources":["<anon>","src/index.js"],"sourcesContent":["const productWrapper = document.querySelector(\".product-wrapper\");\nconst addedProduct = document.querySelector(\".added-products\");\nconst modalClose = document.querySelector(\".modal-close\");\nconst modal = document.querySelector(\".modal\");\nconst cart = document.querySelector(\".cart\");\nconst itemCount = document.querySelector(\".item-count\");\n//=================================================================================================================//\n// fetching product\n//=================================================================================================================//\nfunction getProducts() {\n    fetch(\"http://localhost:8000/products\").then((res)=>{\n        if (!res.ok) throw new Error(\"Products not found, please try again later!\");\n        return res.json();\n    }).then((data)=>{\n        renderProducts(data);\n        renderLocalData(data);\n    }).catch((err)=>renderError(err));\n}\ngetProducts();\n//=================================================================================================================//\n// currency formate\n//=================================================================================================================//\nfunction currencyFormate(price) {\n    return price.toLocaleString(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\"\n    });\n}\n//=================================================================================================================//\n// rendering data\n//=================================================================================================================//\nfunction renderProducts(products) {\n    products.forEach((product)=>{\n        html = `\r\n      <div\r\n          class=\"product overflow-hidden w-96 bg-white/75 shadow-xl backdrop-blur-lg rounded-lg shadow-gray-200\"\r\n        >\r\n          <div\r\n            class=\"product-img h-75 overflow-hidden p-3 flex justify-center items-center\"\r\n          >\r\n            <img\r\n              src=${product.image}\r\n              alt=${product.title}\r\n              class=\"w-full block\"\r\n            />\r\n          </div>\r\n          <div class=\"product-text p-5 flex flex-col gap-1\">\r\n            <p class=\"text-sm font-semibold text-violet-500 tracking-widest\">${product.catagory}</p>\r\n            <h3 class=\"text-2xl font-semibold truncate text-black/80\">\r\n              ${product.title}\r\n            </h3>\r\n            <p class=\"text-2xl text-rose-500 font-semibold\">\r\n              ${currencyFormate(product.price)}\r\n              <span class=\"text-sm font-semibold text-gray-500\"\r\n                >(${product.review} reviews)</span\r\n              >\r\n            </p>\r\n            <button\r\n            data-id=\"${product.id}\"\r\n              class=\"add-to-cart self-start bg-violet-500 text-violet-50 py-2 px-5 rounded font-semibold shadow-2xl shadow-violet-200 hover:bg-rose-500 hover:shadow-rose-200 duration-200 mt-2\"\r\n            >\r\n              Add to cart\r\n            </button>\r\n          </div>\r\n      </div>\r\n    `;\n        productWrapper.insertAdjacentHTML(\"afterbegin\", html);\n    });\n    //===============================================================================================================//\n    // add to cart\n    //===============================================================================================================//\n    const addToCart = document.querySelectorAll(\".add-to-cart\");\n    addToCart.forEach((btn)=>{\n        btn.addEventListener(\"click\", function(e) {\n            const id = e.target.dataset.id;\n            // cart open\n            modal.classList.add(\"-translate-x-0\");\n            modal.classList.remove(\"translate-x-full\");\n            // checking local data\n            const checkingLocalData = JSON.parse(localStorage.getItem(`item-${id}`));\n            if (checkingLocalData) return null;\n            if (!checkingLocalData) {\n                // rumber of items in cart\n                numberOfItems();\n                // calling another fetch function\n                fetchingSingleProduct(id);\n            }\n        });\n    });\n}\n//=================================================================================================================//\n// number of items in cart\n//=================================================================================================================//\nfunction numberOfItems() {\n    const items = Number(itemCount.textContent) + 1;\n    itemCount.textContent = items;\n}\n//=================================================================================================================//\n// fetching single product\n//=================================================================================================================//\nfunction fetchingSingleProduct(id) {\n    fetch(`http://localhost:8000/products/${id}`).then((res)=>res.json()).then((data)=>{\n        saveInLocalStroage(data);\n        renderSingleProduct(data);\n    });\n}\n//=================================================================================================================//\n// save in local stroage\n//=================================================================================================================//\nfunction saveInLocalStroage(product) {\n    // getting data from locel stroage\n    const getLocalData = JSON.parse(localStorage.getItem(`item-${product.id}`));\n    // if data exists return null\n    if (getLocalData) return null;\n    // if data does not exists\n    if (!getLocalData) localStorage.setItem(`item-${product.id}`, JSON.stringify(product));\n}\n//=================================================================================================================//\n// rendering local data\n//=================================================================================================================//\nfunction renderLocalData(products) {\n    let localData = [];\n    for(let i = 1; i <= products.length; i++){\n        const dataParsing = JSON.parse(localStorage.getItem(`item-${i}`));\n        if (dataParsing) localData.push(dataParsing);\n    }\n    // render local data\n    localData.forEach((product)=>{\n        renderSingleProduct(product);\n    });\n    // render item count\n    const items = localData.length;\n    itemCount.textContent = items;\n}\n//=================================================================================================================//\n// rendering single product\n//=================================================================================================================//\nfunction renderSingleProduct(product) {\n    const html1 = `\r\n  <div\r\n  class=\"added-product grid grid-cols-4 border-b pb-2 justify-center overflow-hidden gap-2 items-center \"\r\n>\r\n  <div\r\n    class=\"img overflow-hidden w-20 rounded flex justify-center items-center cursor-pointer\"\r\n  >\r\n    <img\r\n      src=\"${product.image}\"\r\n      alt=\"${product.title}\"\r\n      class=\"block w-full rounded\"\r\n    />\r\n  </div>\r\n  <div class=\"texts flex flex-col gap-2 col-span-2\">\r\n    <h4 class=\"font-semibold\">${product.title}</h4>\r\n    <div class=\"flex justify-between items-center\">\r\n      <p class=\"price font-bold text-rose-500\">$${currencyFormate(product.price)}</p>\r\n      <p\r\n        class=\"font-semibold text-xl overfolw-hidden flex items-center bg-purple-100 gap-3\"\r\n      >\r\n        <span\r\n          class=\"bg-violet-500 text-violet-50 px-3 cursor-pointer active:bg-rose-500 select-none\"\r\n          >-</span\r\n        ><span>1</span\r\n        ><span\r\n          class=\"bg-violet-500 text-violet-50 px-3 cursor-pointer active:bg-rose-500 select-none\"\r\n          >+</span\r\n        >\r\n      </p>\r\n    </div>\r\n  </div>\r\n  <button\r\n    class=\"romove-item hover:text-rose-500 justify-self-end pt-10 duration-200\"\r\n  >\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n      stroke-width=\"1.5\"\r\n      stroke=\"currentColor\"\r\n      class=\"w-6 h-6\"\r\n    >\r\n      <path\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n        d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\r\n      />\r\n    </svg>\r\n  </button>\r\n</div>\r\n  `;\n    addedProduct.insertAdjacentHTML(\"afterbegin\", html1);\n}\n//=================================================================================================================//\n// rendering error\n//=================================================================================================================//\nfunction renderError(err) {\n    const html1 = `\r\n      <p>${err.message}</p>\r\n  `;\n    productWrapper.insertAdjacentHTML(\"afterbegin\", html1);\n}\n//=================================================================================================================//\n// modal open\n//=================================================================================================================//\ncart.addEventListener(\"click\", function() {\n    modal.classList.add(\"-translate-x-0\");\n    modal.classList.remove(\"translate-x-full\");\n});\n//=================================================================================================================//\n// modal close\n//=================================================================================================================//\nmodalClose.addEventListener(\"click\", function() {\n    modal.classList.add(\"translate-x-full\");\n    modal.classList.remove(\"-translate-x-0\");\n});\n\n//# sourceMappingURL=index.64bf1e05.js.map\n","const productWrapper = document.querySelector(\".product-wrapper\");\r\nconst addedProduct = document.querySelector(\".added-products\");\r\nconst modalClose = document.querySelector(\".modal-close\");\r\nconst modal = document.querySelector(\".modal\");\r\nconst cart = document.querySelector(\".cart\");\r\nconst itemCount = document.querySelector(\".item-count\");\r\n\r\n//=================================================================================================================//\r\n// fetching product\r\n//=================================================================================================================//\r\n\r\nfunction getProducts() {\r\n  fetch(\"http://localhost:8000/products\")\r\n    .then((res) => {\r\n      if (!res.ok)\r\n        throw new Error(\"Products not found, please try again later!\");\r\n      return res.json();\r\n    })\r\n    .then((data) => {\r\n      renderProducts(data);\r\n      renderLocalData(data);\r\n    })\r\n    .catch((err) => renderError(err));\r\n}\r\n\r\ngetProducts();\r\n\r\n//=================================================================================================================//\r\n// currency formate\r\n//=================================================================================================================//\r\n\r\nfunction currencyFormate(price) {\r\n  return price.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n}\r\n\r\n//=================================================================================================================//\r\n// rendering data\r\n//=================================================================================================================//\r\n\r\nfunction renderProducts(products) {\r\n  products.forEach((product) => {\r\n    html = `\r\n      <div\r\n          class=\"product overflow-hidden w-96 bg-white/75 shadow-xl backdrop-blur-lg rounded-lg shadow-gray-200\"\r\n        >\r\n          <div\r\n            class=\"product-img h-75 overflow-hidden p-3 flex justify-center items-center\"\r\n          >\r\n            <img\r\n              src=${product.image}\r\n              alt=${product.title}\r\n              class=\"w-full block\"\r\n            />\r\n          </div>\r\n          <div class=\"product-text p-5 flex flex-col gap-1\">\r\n            <p class=\"text-sm font-semibold text-violet-500 tracking-widest\">${\r\n              product.catagory\r\n            }</p>\r\n            <h3 class=\"text-2xl font-semibold truncate text-black/80\">\r\n              ${product.title}\r\n            </h3>\r\n            <p class=\"text-2xl text-rose-500 font-semibold\">\r\n              ${currencyFormate(product.price)}\r\n              <span class=\"text-sm font-semibold text-gray-500\"\r\n                >(${product.review} reviews)</span\r\n              >\r\n            </p>\r\n            <button\r\n            data-id=\"${product.id}\"\r\n              class=\"add-to-cart self-start bg-violet-500 text-violet-50 py-2 px-5 rounded font-semibold shadow-2xl shadow-violet-200 hover:bg-rose-500 hover:shadow-rose-200 duration-200 mt-2\"\r\n            >\r\n              Add to cart\r\n            </button>\r\n          </div>\r\n      </div>\r\n    `;\r\n    productWrapper.insertAdjacentHTML(\"afterbegin\", html);\r\n  });\r\n\r\n  //===============================================================================================================//\r\n  // add to cart\r\n  //===============================================================================================================//\r\n\r\n  const addToCart = document.querySelectorAll(\".add-to-cart\");\r\n\r\n  addToCart.forEach((btn) => {\r\n    btn.addEventListener(\"click\", function (e) {\r\n      const id = e.target.dataset.id;\r\n\r\n      // cart open\r\n      modal.classList.add(\"-translate-x-0\");\r\n      modal.classList.remove(\"translate-x-full\");\r\n\r\n      // checking local data\r\n      const checkingLocalData = JSON.parse(localStorage.getItem(`item-${id}`));\r\n\r\n      if (checkingLocalData) {\r\n        return null;\r\n      }\r\n\r\n      if (!checkingLocalData) {\r\n        // rumber of items in cart\r\n        numberOfItems();\r\n        // calling another fetch function\r\n        fetchingSingleProduct(id);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n//=================================================================================================================//\r\n// number of items in cart\r\n//=================================================================================================================//\r\n\r\nfunction numberOfItems() {\r\n  const items = Number(itemCount.textContent) + 1;\r\n  itemCount.textContent = items;\r\n}\r\n\r\n//=================================================================================================================//\r\n// fetching single product\r\n//=================================================================================================================//\r\n\r\nfunction fetchingSingleProduct(id) {\r\n  fetch(`http://localhost:8000/products/${id}`)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      saveInLocalStroage(data);\r\n      renderSingleProduct(data);\r\n    });\r\n}\r\n\r\n//=================================================================================================================//\r\n// save in local stroage\r\n//=================================================================================================================//\r\n\r\nfunction saveInLocalStroage(product) {\r\n  // getting data from locel stroage\r\n  const getLocalData = JSON.parse(localStorage.getItem(`item-${product.id}`));\r\n\r\n  // if data exists return null\r\n  if (getLocalData) return null;\r\n\r\n  // if data does not exists\r\n  if (!getLocalData) {\r\n    localStorage.setItem(`item-${product.id}`, JSON.stringify(product));\r\n  }\r\n}\r\n\r\n//=================================================================================================================//\r\n// rendering local data\r\n//=================================================================================================================//\r\n\r\nfunction renderLocalData(products) {\r\n  let localData = [];\r\n\r\n  for (let i = 1; i <= products.length; i++) {\r\n    const dataParsing = JSON.parse(localStorage.getItem(`item-${i}`));\r\n    if (dataParsing) localData.push(dataParsing);\r\n  }\r\n\r\n  // render local data\r\n  localData.forEach((product) => {\r\n    renderSingleProduct(product);\r\n  });\r\n\r\n  // render item count\r\n  const items = localData.length;\r\n  itemCount.textContent = items;\r\n}\r\n\r\n//=================================================================================================================//\r\n// rendering single product\r\n//=================================================================================================================//\r\n\r\nfunction renderSingleProduct(product) {\r\n  const html = `\r\n  <div\r\n  class=\"added-product grid grid-cols-4 border-b pb-2 justify-center overflow-hidden gap-2 items-center \"\r\n>\r\n  <div\r\n    class=\"img overflow-hidden w-20 rounded flex justify-center items-center cursor-pointer\"\r\n  >\r\n    <img\r\n      src=\"${product.image}\"\r\n      alt=\"${product.title}\"\r\n      class=\"block w-full rounded\"\r\n    />\r\n  </div>\r\n  <div class=\"texts flex flex-col gap-2 col-span-2\">\r\n    <h4 class=\"font-semibold\">${product.title}</h4>\r\n    <div class=\"flex justify-between items-center\">\r\n      <p class=\"price font-bold text-rose-500\">$${currencyFormate(\r\n        product.price\r\n      )}</p>\r\n      <p\r\n        class=\"font-semibold text-xl overfolw-hidden flex items-center bg-purple-100 gap-3\"\r\n      >\r\n        <span\r\n          class=\"bg-violet-500 text-violet-50 px-3 cursor-pointer active:bg-rose-500 select-none\"\r\n          >-</span\r\n        ><span>1</span\r\n        ><span\r\n          class=\"bg-violet-500 text-violet-50 px-3 cursor-pointer active:bg-rose-500 select-none\"\r\n          >+</span\r\n        >\r\n      </p>\r\n    </div>\r\n  </div>\r\n  <button\r\n    class=\"romove-item hover:text-rose-500 justify-self-end pt-10 duration-200\"\r\n  >\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n      stroke-width=\"1.5\"\r\n      stroke=\"currentColor\"\r\n      class=\"w-6 h-6\"\r\n    >\r\n      <path\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n        d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\r\n      />\r\n    </svg>\r\n  </button>\r\n</div>\r\n  `;\r\n  addedProduct.insertAdjacentHTML(\"afterbegin\", html);\r\n}\r\n\r\n//=================================================================================================================//\r\n// rendering error\r\n//=================================================================================================================//\r\n\r\nfunction renderError(err) {\r\n  const html = `\r\n      <p>${err.message}</p>\r\n  `;\r\n\r\n  productWrapper.insertAdjacentHTML(\"afterbegin\", html);\r\n}\r\n\r\n//=================================================================================================================//\r\n// modal open\r\n//=================================================================================================================//\r\n\r\ncart.addEventListener(\"click\", function () {\r\n  modal.classList.add(\"-translate-x-0\");\r\n  modal.classList.remove(\"translate-x-full\");\r\n});\r\n\r\n//=================================================================================================================//\r\n// modal close\r\n//=================================================================================================================//\r\n\r\nmodalClose.addEventListener(\"click\", function () {\r\n  modal.classList.add(\"translate-x-full\");\r\n  modal.classList.remove(\"-translate-x-0\");\r\n});\r\n"],"names":["productWrapper","document","querySelector","addedProduct","modalClose","modal","cart","itemCount","currencyFormate","price","toLocaleString","style","currency","renderSingleProduct","product","html1","image","title","insertAdjacentHTML","fetch","then","res","ok","Error","json","data","renderProducts","products","forEach","html","catagory","review","id","addToCart","querySelectorAll","btn","addEventListener","e","target","dataset","classList","add","remove","checkingLocalData","JSON","parse","localStorage","getItem","numberOfItems","items","Number","textContent","fetchingSingleProduct","saveInLocalStroage","getLocalData","setItem","stringify","renderLocalData","localData","i","length","dataParsing","push","catch","err","renderError","message"],"version":3,"file":"index.64bf1e05.js.map"}